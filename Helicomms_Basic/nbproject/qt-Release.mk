#############################################################################
# Makefile for building: dist/Release/GNU-Linux-x86/Helicomms_Basic
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Jul 18 08:31:02 2014
# Project:  nbproject/qt-Release.pro
# Template: app
# Command: /usr/bin/qmake VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -Inbproject -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Iekf_coder -I/usr/local/include -I/usr/local/include/opencv -I. -I. -Inbproject -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lboost_system -larmadillo -lboost_signals-mt -Wl,-rpath,/opt/intel/composer_xe_2013.1.117/compiler/lib/ia32 -L/usr/local/lib -lcvblob /usr/local/lib/libopencv_calib3d.so /usr/local/lib/libopencv_contrib.so /usr/local/lib/libopencv_core.so /usr/local/lib/libopencv_features2d.so /usr/local/lib/libopencv_flann.so /usr/local/lib/libopencv_gpu.so /usr/local/lib/libopencv_highgui.so /usr/local/lib/libopencv_imgproc.so /usr/local/lib/libopencv_legacy.so /usr/local/lib/libopencv_ml.so /usr/local/lib/libopencv_nonfree.so /usr/local/lib/libopencv_objdetect.so /usr/local/lib/libopencv_ocl.so /usr/local/lib/libopencv_photo.so /usr/local/lib/libopencv_stitching.so /usr/local/lib/libopencv_superres.so /usr/local/lib/libopencv_ts.a /usr/local/lib/libopencv_video.so /usr/local/lib/libopencv_videostab.so -ltbb -lrt -lm -ldl -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/Release/GNU-Linux-x86/

####### Files

SOURCES       = BasicWindow.cpp \
		Helicopter.cpp \
		Multicast.cpp \
		OpencvCamera.cpp \
		PoseEstimation.cpp \
		TCP_client.cpp \
		UDP_socket.cpp \
		ekf_coder/Reb.cpp \
		ekf_coder/correctStateAndCov.cpp \
		ekf_coder/ekf_coder_emxutil.cpp \
		ekf_coder/ekf_coder_initialize.cpp \
		ekf_coder/ekf_coder_terminate.cpp \
		ekf_coder/eulerAnglesFromQuaternion.cpp \
		ekf_coder/eye.cpp \
		ekf_coder/inv.cpp \
		ekf_coder/mpower.cpp \
		ekf_coder/projectStateAndCov.cpp \
		ekf_coder/quaternionRotation.cpp \
		ekf_coder/rtGetInf.cpp \
		ekf_coder/rtGetNaN.cpp \
		ekf_coder/rt_nonfinite.cpp \
		ekf_coder/solvePoseEst.cpp \
		main.cpp \
		qcustomplot.cpp moc_BasicWindow.cpp \
		moc_qcustomplot.cpp
OBJECTS       = build/Release/GNU-Linux-x86/BasicWindow.o \
		build/Release/GNU-Linux-x86/Helicopter.o \
		build/Release/GNU-Linux-x86/Multicast.o \
		build/Release/GNU-Linux-x86/OpencvCamera.o \
		build/Release/GNU-Linux-x86/PoseEstimation.o \
		build/Release/GNU-Linux-x86/TCP_client.o \
		build/Release/GNU-Linux-x86/UDP_socket.o \
		build/Release/GNU-Linux-x86/Reb.o \
		build/Release/GNU-Linux-x86/correctStateAndCov.o \
		build/Release/GNU-Linux-x86/ekf_coder_emxutil.o \
		build/Release/GNU-Linux-x86/ekf_coder_initialize.o \
		build/Release/GNU-Linux-x86/ekf_coder_terminate.o \
		build/Release/GNU-Linux-x86/eulerAnglesFromQuaternion.o \
		build/Release/GNU-Linux-x86/eye.o \
		build/Release/GNU-Linux-x86/inv.o \
		build/Release/GNU-Linux-x86/mpower.o \
		build/Release/GNU-Linux-x86/projectStateAndCov.o \
		build/Release/GNU-Linux-x86/quaternionRotation.o \
		build/Release/GNU-Linux-x86/rtGetInf.o \
		build/Release/GNU-Linux-x86/rtGetNaN.o \
		build/Release/GNU-Linux-x86/rt_nonfinite.o \
		build/Release/GNU-Linux-x86/solvePoseEst.o \
		build/Release/GNU-Linux-x86/main.o \
		build/Release/GNU-Linux-x86/qcustomplot.o \
		build/Release/GNU-Linux-x86/moc_BasicWindow.o \
		build/Release/GNU-Linux-x86/moc_qcustomplot.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		nbproject/qt-Release.pro
QMAKE_TARGET  = Helicomms_Basic
DESTDIR       = dist/Release/GNU-Linux-x86/
TARGET        = dist/Release/GNU-Linux-x86/Helicomms_Basic

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: qttmp-Release.mk $(TARGET)

$(TARGET): ui_BasicWindow.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) dist/Release/GNU-Linux-x86/ || $(MKDIR) dist/Release/GNU-Linux-x86/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qttmp-Release.mk: nbproject/qt-Release.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) VPATH=. -o qttmp-Release.mk nbproject/qt-Release.pro

dist: 
	@$(CHK_DIR_EXISTS) build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0 || $(MKDIR) build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0/ && $(COPY_FILE) --parents BasicWindow.h Helicopter.h Multicast.h OpencvCamera.h PoseEstimation.h TCP_client.h UDP_socket.h ekf_coder/Reb.h ekf_coder/correctStateAndCov.h ekf_coder/ekf_coder_emxutil.h ekf_coder/ekf_coder_initialize.h ekf_coder/ekf_coder_terminate.h ekf_coder/ekf_coder_types.h ekf_coder/eulerAnglesFromQuaternion.h ekf_coder/eye.h ekf_coder/inv.h ekf_coder/mpower.h ekf_coder/projectStateAndCov.h ekf_coder/quaternionRotation.h ekf_coder/rtGetInf.h ekf_coder/rtGetNaN.h ekf_coder/rt_defines.h ekf_coder/rt_nonfinite.h ekf_coder/rtwtypes.h ekf_coder/solvePoseEst.h qcustomplot.h build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0/ && $(COPY_FILE) --parents BasicWindow.cpp Helicopter.cpp Multicast.cpp OpencvCamera.cpp PoseEstimation.cpp TCP_client.cpp UDP_socket.cpp ekf_coder/Reb.cpp ekf_coder/correctStateAndCov.cpp ekf_coder/ekf_coder_emxutil.cpp ekf_coder/ekf_coder_initialize.cpp ekf_coder/ekf_coder_terminate.cpp ekf_coder/eulerAnglesFromQuaternion.cpp ekf_coder/eye.cpp ekf_coder/inv.cpp ekf_coder/mpower.cpp ekf_coder/projectStateAndCov.cpp ekf_coder/quaternionRotation.cpp ekf_coder/rtGetInf.cpp ekf_coder/rtGetNaN.cpp ekf_coder/rt_nonfinite.cpp ekf_coder/solvePoseEst.cpp main.cpp qcustomplot.cpp build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0/ && $(COPY_FILE) --parents BasicWindow.ui build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0/ && (cd `dirname build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0` && $(TAR) Helicomms_Basic1.0.0.tar Helicomms_Basic1.0.0 && $(COMPRESS) Helicomms_Basic1.0.0.tar) && $(MOVE) `dirname build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0`/Helicomms_Basic1.0.0.tar.gz . && $(DEL_FILE) -r build/Release/GNU-Linux-x86/Helicomms_Basic1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) qttmp-Release.mk


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_BasicWindow.cpp moc_qcustomplot.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_BasicWindow.cpp moc_qcustomplot.cpp
moc_BasicWindow.cpp: ui_BasicWindow.h \
		qcustomplot.h \
		Helicopter.h \
		UDP_socket.h \
		Multicast.h \
		PoseEstimation.h \
		OpencvCamera.h \
		TCP_client.h \
		BasicWindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) BasicWindow.h -o moc_BasicWindow.cpp

moc_qcustomplot.cpp: qcustomplot.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) qcustomplot.h -o moc_qcustomplot.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_BasicWindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_BasicWindow.h
ui_BasicWindow.h: BasicWindow.ui
	/usr/bin/uic-qt4 BasicWindow.ui -o ui_BasicWindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

build/Release/GNU-Linux-x86/BasicWindow.o: BasicWindow.cpp BasicWindow.h \
		ui_BasicWindow.h \
		qcustomplot.h \
		Helicopter.h \
		UDP_socket.h \
		Multicast.h \
		PoseEstimation.h \
		OpencvCamera.h \
		TCP_client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/BasicWindow.o BasicWindow.cpp

build/Release/GNU-Linux-x86/Helicopter.o: Helicopter.cpp Helicopter.h \
		UDP_socket.h \
		Multicast.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/Helicopter.o Helicopter.cpp

build/Release/GNU-Linux-x86/Multicast.o: Multicast.cpp Multicast.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/Multicast.o Multicast.cpp

build/Release/GNU-Linux-x86/OpencvCamera.o: OpencvCamera.cpp OpencvCamera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/OpencvCamera.o OpencvCamera.cpp

build/Release/GNU-Linux-x86/PoseEstimation.o: PoseEstimation.cpp PoseEstimation.h \
		OpencvCamera.h \
		Helicopter.h \
		UDP_socket.h \
		Multicast.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/PoseEstimation.o PoseEstimation.cpp

build/Release/GNU-Linux-x86/TCP_client.o: TCP_client.cpp TCP_client.h \
		OpencvCamera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/TCP_client.o TCP_client.cpp

build/Release/GNU-Linux-x86/UDP_socket.o: UDP_socket.cpp UDP_socket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/UDP_socket.o UDP_socket.cpp

build/Release/GNU-Linux-x86/Reb.o: ekf_coder/Reb.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/Reb.o ekf_coder/Reb.cpp

build/Release/GNU-Linux-x86/correctStateAndCov.o: ekf_coder/correctStateAndCov.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/ekf_coder_emxutil.h \
		ekf_coder/mpower.h \
		ekf_coder/eye.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/correctStateAndCov.o ekf_coder/correctStateAndCov.cpp

build/Release/GNU-Linux-x86/ekf_coder_emxutil.o: ekf_coder/ekf_coder_emxutil.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/ekf_coder_emxutil.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/ekf_coder_emxutil.o ekf_coder/ekf_coder_emxutil.cpp

build/Release/GNU-Linux-x86/ekf_coder_initialize.o: ekf_coder/ekf_coder_initialize.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/ekf_coder_initialize.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/ekf_coder_initialize.o ekf_coder/ekf_coder_initialize.cpp

build/Release/GNU-Linux-x86/ekf_coder_terminate.o: ekf_coder/ekf_coder_terminate.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/ekf_coder_terminate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/ekf_coder_terminate.o ekf_coder/ekf_coder_terminate.cpp

build/Release/GNU-Linux-x86/eulerAnglesFromQuaternion.o: ekf_coder/eulerAnglesFromQuaternion.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/eulerAnglesFromQuaternion.o ekf_coder/eulerAnglesFromQuaternion.cpp

build/Release/GNU-Linux-x86/eye.o: ekf_coder/eye.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/eye.h \
		ekf_coder/ekf_coder_emxutil.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/eye.o ekf_coder/eye.cpp

build/Release/GNU-Linux-x86/inv.o: ekf_coder/inv.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/inv.h \
		ekf_coder/ekf_coder_emxutil.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/inv.o ekf_coder/inv.cpp

build/Release/GNU-Linux-x86/mpower.o: ekf_coder/mpower.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/mpower.h \
		ekf_coder/ekf_coder_emxutil.h \
		ekf_coder/inv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/mpower.o ekf_coder/mpower.cpp

build/Release/GNU-Linux-x86/projectStateAndCov.o: ekf_coder/projectStateAndCov.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/eye.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/projectStateAndCov.o ekf_coder/projectStateAndCov.cpp

build/Release/GNU-Linux-x86/quaternionRotation.o: ekf_coder/quaternionRotation.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/quaternionRotation.o ekf_coder/quaternionRotation.cpp

build/Release/GNU-Linux-x86/rtGetInf.o: ekf_coder/rtGetInf.cpp ekf_coder/rtGetInf.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/rt_nonfinite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/rtGetInf.o ekf_coder/rtGetInf.cpp

build/Release/GNU-Linux-x86/rtGetNaN.o: ekf_coder/rtGetNaN.cpp ekf_coder/rtGetNaN.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/rt_nonfinite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/rtGetNaN.o ekf_coder/rtGetNaN.cpp

build/Release/GNU-Linux-x86/rt_nonfinite.o: ekf_coder/rt_nonfinite.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/rtGetNaN.h \
		ekf_coder/rtGetInf.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/rt_nonfinite.o ekf_coder/rt_nonfinite.cpp

build/Release/GNU-Linux-x86/solvePoseEst.o: ekf_coder/solvePoseEst.cpp ekf_coder/rt_nonfinite.h \
		ekf_coder/rtwtypes.h \
		ekf_coder/Reb.h \
		ekf_coder/rt_defines.h \
		ekf_coder/ekf_coder_types.h \
		ekf_coder/correctStateAndCov.h \
		ekf_coder/eulerAnglesFromQuaternion.h \
		ekf_coder/projectStateAndCov.h \
		ekf_coder/quaternionRotation.h \
		ekf_coder/solvePoseEst.h \
		ekf_coder/ekf_coder_emxutil.h \
		ekf_coder/inv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/solvePoseEst.o ekf_coder/solvePoseEst.cpp

build/Release/GNU-Linux-x86/main.o: main.cpp Helicopter.h \
		UDP_socket.h \
		Multicast.h \
		BasicWindow.h \
		ui_BasicWindow.h \
		qcustomplot.h \
		PoseEstimation.h \
		OpencvCamera.h \
		TCP_client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/main.o main.cpp

build/Release/GNU-Linux-x86/qcustomplot.o: qcustomplot.cpp qcustomplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/qcustomplot.o qcustomplot.cpp

build/Release/GNU-Linux-x86/moc_BasicWindow.o: moc_BasicWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_BasicWindow.o moc_BasicWindow.cpp

build/Release/GNU-Linux-x86/moc_qcustomplot.o: moc_qcustomplot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/GNU-Linux-x86/moc_qcustomplot.o moc_qcustomplot.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

